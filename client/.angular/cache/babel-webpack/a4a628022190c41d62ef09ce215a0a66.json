{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"ngx-ui-loader\";\nimport * as i5 from \"src/app/services/snackbar.service\";\nimport * as i6 from \"@angular/material/toolbar\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/input\";\nimport * as i12 from \"@angular/common\";\nfunction ChangePasswordComponent_mat_error_18_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChangePasswordComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ChangePasswordComponent_mat_error_18_span_1_Template, 2, 0, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.changePasswordForm.controls.oldPassword.errors.required);\n  }\n}\nfunction ChangePasswordComponent_mat_error_26_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChangePasswordComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ChangePasswordComponent_mat_error_26_span_1_Template, 2, 0, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.changePasswordForm.controls.newPassword.errors.required);\n  }\n}\nfunction ChangePasswordComponent_mat_error_34_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChangePasswordComponent_mat_error_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ChangePasswordComponent_mat_error_34_span_1_Template, 2, 0, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.changePasswordForm.controls.confirmPassword.errors.required);\n  }\n}\nfunction ChangePasswordComponent_mat_hint_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\")(1, \"span\");\n    i0.ɵɵtext(2, \"New Password and Confirm password do not match.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let ChangePasswordComponent = /*#__PURE__*/(() => {\n  class ChangePasswordComponent {\n    constructor(formBuilder, userService, dialogRef, ngxService, snackbarService) {\n      this.formBuilder = formBuilder;\n      this.userService = userService;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.snackbarService = snackbarService;\n      this.oldPassword = true;\n      this.newPassword = true;\n      this.confirmPassword = true;\n      this.changePasswordForm = FormGroup;\n    }\n    ngOnInit() {\n      this.changePasswordForm = this.formBuilder.group({\n        oldPassword: [null, Validators.required],\n        newPassword: [null, Validators.required],\n        confirmPassword: [null, Validators.required]\n      });\n    }\n    validateSubmit() {\n      if (this.changePasswordForm.controls['newPassword'].value != this.changePasswordForm.controls['confirmPassword'].value) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    handleChangePasswordSubmit() {\n      this.ngxService.start();\n      var formData = this.changePasswordForm.value;\n      var data = {\n        oldPassword: formData.oldPassword,\n        newPassword: formData.newPassword,\n        confirmPassword: formData.confirmPassword\n      };\n      this.userService.changePassword(data).subscribe(response => {\n        this.ngxService.stop();\n        this.dialogRef.close();\n        this.responseMessage = response === null || response === void 0 ? void 0 : response.message;\n        this.snackbarService.openSnackBar(this.responseMessage, 'success');\n      }, error => {\n        var _a, _b;\n        console.log(error);\n        this.ngxService.stop();\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n  }\n  ChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) {\n    return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.NgxUiLoaderService), i0.ɵɵdirectiveInject(i5.SnackbarService));\n  };\n  ChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChangePasswordComponent,\n    selectors: [[\"app-change-password\"]],\n    decls: 45,\n    vars: 18,\n    consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"spacer\"], [\"mat-icon-button\", \"\", \"mat-dialog-close\", \"\", 1, \"mat-dialog-close\"], [1, \"mat-typography\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"appearance\", \"standard\", \"fxFlex\", \"\"], [\"matInput\", \"\", \"formControlName\", \"oldPassword\", \"type\", \"password\", \"required\", \"\", 3, \"type\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"newPassword\", \"type\", \"password\", \"required\", \"\", 3, \"type\"], [\"matInput\", \"\", \"formControlName\", \"confirmPassword\", \"type\", \"password\", \"required\", \"\", 3, \"type\"], [1, \"mat-actions\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"mat-dialog-close\", \"\"]],\n    template: function ChangePasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\");\n        i0.ɵɵtext(3, \"Change Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"span\", 2);\n        i0.ɵɵelementStart(5, \"button\", 3)(6, \"mat-icon\");\n        i0.ɵɵtext(7, \"close\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(8, \"mat-dialog-content\", 4)(9, \"form\", 5)(10, \"div\", 6)(11, \"mat-form-field\", 7)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Old Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵelementStart(15, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_15_listener() {\n          return ctx.oldPassword = !ctx.oldPassword;\n        });\n        i0.ɵɵelementStart(16, \"mat-icon\");\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(18, ChangePasswordComponent_mat_error_18_Template, 2, 1, \"mat-error\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-form-field\", 7)(20, \"mat-label\");\n        i0.ɵɵtext(21, \"New Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 11);\n        i0.ɵɵelementStart(23, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_23_listener() {\n          return ctx.newPassword = !ctx.newPassword;\n        });\n        i0.ɵɵelementStart(24, \"mat-icon\");\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(26, ChangePasswordComponent_mat_error_26_Template, 2, 1, \"mat-error\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"mat-form-field\", 7)(28, \"mat-label\");\n        i0.ɵɵtext(29, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 12);\n        i0.ɵɵelementStart(31, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_31_listener() {\n          return ctx.confirmPassword = !ctx.confirmPassword;\n        });\n        i0.ɵɵelementStart(32, \"mat-icon\");\n        i0.ɵɵtext(33);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(34, ChangePasswordComponent_mat_error_34_Template, 2, 1, \"mat-error\", 10);\n        i0.ɵɵtemplate(35, ChangePasswordComponent_mat_hint_35_Template, 3, 0, \"mat-hint\", 10);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(36, \"mat-dialog-actions\", 13)(37, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_37_listener() {\n          return ctx.handleChangePasswordSubmit();\n        });\n        i0.ɵɵelementStart(38, \"mat-icon\");\n        i0.ɵɵtext(39, \"save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(40, \" Update \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"button\", 15)(42, \"mat-icon\");\n        i0.ɵɵtext(43, \"cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(44, \" Close \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.changePasswordForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"type\", ctx.oldPassword ? \"password\" : \"text\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"Hide Password\")(\"aria-pressed\", ctx.oldPassword);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.oldPassword ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.changePasswordForm.controls.oldPassword.touched && ctx.changePasswordForm.controls.oldPassword.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"type\", ctx.newPassword ? \"password\" : \"text\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"Hide Password\")(\"aria-pressed\", ctx.newPassword);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.newPassword ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.changePasswordForm.controls.newPassword.touched && ctx.changePasswordForm.controls.newPassword.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"type\", ctx.confirmPassword ? \"password\" : \"text\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"Hide Password\")(\"aria-pressed\", ctx.confirmPassword);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.confirmPassword ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.changePasswordForm.controls.confirmPassword.touched && ctx.changePasswordForm.controls.confirmPassword.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateSubmit() && !ctx.changePasswordForm.controls.confirmPassword.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.validateSubmit() || !(ctx.changePasswordForm.valid && ctx.changePasswordForm.dirty));\n      }\n    },\n    directives: [i6.MatToolbar, i6.MatToolbarRow, i7.DefaultLayoutDirective, i8.MatButton, i3.MatDialogClose, i9.MatIcon, i3.MatDialogContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i7.DefaultFlexDirective, i10.MatFormField, i10.MatLabel, i11.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i10.MatSuffix, i12.NgIf, i10.MatError, i10.MatHint, i3.MatDialogActions],\n    styles: [\".mat-toolbar[_ngcontent-%COMP%]{margin:-24px -24px 10px;width:auto}mat-form-field[_ngcontent-%COMP%]{padding:5px}mat-hint[_ngcontent-%COMP%]{color:red}.mat-actions[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}\"]\n  });\n  return ChangePasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}