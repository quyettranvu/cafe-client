{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { GlobalConstants } from '../shared/global-constants';\nimport { saveAs } from 'file-saver';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/category.service\";\nimport * as i3 from \"../services/product.service\";\nimport * as i4 from \"ngx-ui-loader\";\nimport * as i5 from \"../services/snackbar.service\";\nimport * as i6 from \"../services/bill.service\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/flex-layout/flex\";\nimport * as i11 from \"@angular/material/form-field\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/common\";\nimport * as i14 from \"@angular/material/select\";\nimport * as i15 from \"@angular/material/core\";\nfunction ManageOrderComponent_mat_error_20_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManageOrderComponent_mat_error_20_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManageOrderComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ManageOrderComponent_mat_error_20_span_1_Template, 2, 0, \"span\", 6);\n    i0.ɵɵtemplate(2, ManageOrderComponent_mat_error_20_span_2_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.manageOrderForm.controls.name.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.manageOrderForm.controls.name.errors.pattern);\n  }\n}\nfunction ManageOrderComponent_mat_error_25_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManageOrderComponent_mat_error_25_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManageOrderComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ManageOrderComponent_mat_error_25_span_1_Template, 2, 0, \"span\", 6);\n    i0.ɵɵtemplate(2, ManageOrderComponent_mat_error_25_span_2_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.manageOrderForm.controls.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.manageOrderForm.controls.email.errors.pattern);\n  }\n}\nfunction ManageOrderComponent_mat_error_30_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManageOrderComponent_mat_error_30_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManageOrderComponent_mat_error_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ManageOrderComponent_mat_error_30_span_1_Template, 2, 0, \"span\", 6);\n    i0.ɵɵtemplate(2, ManageOrderComponent_mat_error_30_span_2_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.manageOrderForm.controls.contactNumber.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.manageOrderForm.controls.contactNumber.errors.pattern);\n  }\n}\nfunction ManageOrderComponent_mat_error_41_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManageOrderComponent_mat_error_41_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" This field is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManageOrderComponent_mat_error_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ManageOrderComponent_mat_error_41_span_1_Template, 2, 0, \"span\", 6);\n    i0.ɵɵtemplate(2, ManageOrderComponent_mat_error_41_span_2_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.manageOrderForm.controls.paymentMethod.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.manageOrderForm.controls.paymentMethod.errors.pattern);\n  }\n}\nfunction ManageOrderComponent_mat_option_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r14 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r14);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r14.name, \" \");\n  }\n}\nfunction ManageOrderComponent_mat_option_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const product_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", product_r15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", product_r15.name, \" \");\n  }\n}\nexport let ManageOrderComponent = /*#__PURE__*/(() => {\n  class ManageOrderComponent {\n    constructor(formBuilder, categoryService, productService, ngxService, snackbarService, billService) {\n      this.formBuilder = formBuilder;\n      this.categoryService = categoryService;\n      this.productService = productService;\n      this.ngxService = ngxService;\n      this.snackbarService = snackbarService;\n      this.billService = billService;\n      this.displayedColumns = ['name', 'category', 'price', 'quantity', 'total', 'edit'];\n      this.dataSource = [];\n      this.manageOrderForm = [];\n      this.categories = [];\n      this.products = [];\n      this.totalAmount = 0;\n    }\n    ngOnInit() {\n      this.ngxService.start();\n      this.getCategories();\n      this.manageOrderForm = this.formBuilder.group({\n        name: [null, [Validators.required, Validators.pattern(GlobalConstants.nameRegex)]],\n        email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]],\n        contactNumber: [null, [Validators.required, Validators.pattern(GlobalConstants.contactNumberRegex)]],\n        paymentMethod: [null, Validators.required],\n        product: [null, Validators.required],\n        category: [null, Validators.required],\n        quantity: [null, Validators.required],\n        price: [null, Validators.required],\n        total: [0, Validators.required]\n      });\n    }\n    getCategories() {\n      this.categoryService.getFilteredCategories().subscribe(response => {\n        this.ngxService.stop();\n        this.categories = response;\n      }, error => {\n        var _a, _b;\n        this.ngxService.stop();\n        console.log(error);\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    getProductsByCategory(value) {\n      this.productService.getByCategory(value.id).subscribe(response => {\n        this.products = response;\n        this.manageOrderForm.controls['price'].setValue('');\n        this.manageOrderForm.controls['quantity'].setValue('');\n        this.manageOrderForm.controls['total'].setValue('');\n      }, error => {\n        var _a, _b;\n        this.ngxService.stop();\n        console.log(error);\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    getProductsById(value) {\n      this.productService.getById(value.id).subscribe(response => {\n        this.price = response.price;\n        this.manageOrderForm.controls['price'].setValue(response.price);\n        this.manageOrderForm.controls['quantity'].setValue('1');\n        this.manageOrderForm.controls['total'].setValue(this.price * 1);\n      }, error => {\n        var _a, _b;\n        this.ngxService.stop();\n        console.log(error);\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    setQuantity(value) {\n      var temp = this.manageOrderForm.controls['quantity'].value;\n      if (temp > 0) {\n        this.manageOrderForm.controls['total'].setValue(this.manageOrderForm.controls['quantity'].value * this.manageOrderForm.controls['total'].value);\n      } else if (temp != '') {\n        this.manageOrderForm.controls['quantity'].setValue('');\n        this.manageOrderForm.controls['total'].setValue(this.manageOrderForm.controls['quantity'].value * this.manageOrderForm.controls['total'].value);\n      }\n    }\n    validateProductAdd() {\n      if (this.manageOrderForm.controls['total'].value === 0 || this.manageOrderForm.controls['total'].value === null || this.manageOrderForm.controls['quantity'].value <= 0) {\n        return true;\n      } else return false;\n    }\n    validateSubmit() {\n      if (this.totalAmount === 0 || this.manageOrderForm.controls['name'].value === null || this.manageOrderForm.controls['email'].value === null || this.manageOrderForm.controls['contactNumber'].value === null || this.manageOrderForm.controls['paymentMethod'].value === null) {\n        return true;\n      } else return false;\n    }\n    add() {\n      var formData = this.manageOrderForm.value;\n      var productName = this.dataSource.find(e => e.id === formData.product.id);\n      //that product not added to cart\n      if (productName === undefined) {\n        this.totalAmount = this.totalAmount + formData.total;\n        this.dataSource.push({\n          id: formData.product.id,\n          name: formData.product.name,\n          category: formData.category.name,\n          quantity: formData.quantity,\n          price: formData.price,\n          total: formData.total\n        });\n        this.dataSource = [...this.dataSource];\n        this.snackbarService.openSnackBar(GlobalConstants.productAdded, 'success');\n      } else {\n        this.snackbarService.openSnackBar(GlobalConstants.productExistError, GlobalConstants.error);\n      }\n    }\n    handleDeleteAction(value, element) {\n      this.totalAmount = this.totalAmount - element.total;\n      this.dataSource.splice(value, 1);\n      this.dataSource = [...this.dataSource];\n    }\n    submitAction() {\n      var formData = this.manageOrderForm.value;\n      var data = {\n        name: formData.name,\n        email: formData.email,\n        contactNumber: formData.contactNumber,\n        paymentMethod: formData.paymentMethod,\n        totalAmount: this.totalAmount.toString(),\n        productDetails: JSON.stringify(this.dataSource)\n      };\n      this.ngxService.start();\n      this.billService.generateReport(data).subscribe(response => {\n        this.downloadFile(response === null || response === void 0 ? void 0 : response.uuid);\n        this.manageOrderForm = [];\n        this.dataSource = [];\n        this.totalAmount = 0;\n      }, error => {\n        var _a, _b;\n        this.ngxService.stop();\n        console.log(error);\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    downloadFile(fileName) {\n      var data = {\n        uuid: fileName\n      };\n      this.billService.getPdf(data).subscribe(response => {\n        saveAs(response.fileName, fileName + '.pdf');\n        this.ngxService.stop();\n      });\n    }\n  }\n  ManageOrderComponent.ɵfac = function ManageOrderComponent_Factory(t) {\n    return new (t || ManageOrderComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i3.ProductService), i0.ɵɵdirectiveInject(i4.NgxUiLoaderService), i0.ɵɵdirectiveInject(i5.SnackbarService), i0.ɵɵdirectiveInject(i6.BillService));\n  };\n  ManageOrderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ManageOrderComponent,\n    selectors: [[\"app-manage-order\"]],\n    decls: 60,\n    vars: 9,\n    consts: [[\"mat-flat-button\", \"\", \"color\", \"primary\", 1, \"float-right\", 3, \"disabled\", \"click\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"fxLayout\", \"row wrap\"], [\"appearance\", \"standard\", \"fxFlex\", \"\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"contactNumber\", \"required\", \"\"], [\"formControlName\", \"paymentMethod\", \"required\", \"\"], [\"value\", \"Cash\"], [\"value\", \"Credit Card\"], [\"value\", \"Debit Card\"], [\"formControlName\", \"category\", 3, \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"product\", 3, \"selectionChange\"], [3, \"value\"]],\n    template: function ManageOrderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"b\")(2, \"span\");\n        i0.ɵɵtext(3, \"Manage Order\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function ManageOrderComponent_Template_button_click_4_listener() {\n          return ctx.submitAction();\n        });\n        i0.ɵɵelementStart(5, \"mat-icon\");\n        i0.ɵɵtext(6, \"print\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(7, \" Submit & Get Bill \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"hr\");\n        i0.ɵɵelementStart(9, \"mat-card\")(10, \"b\")(11, \"span\");\n        i0.ɵɵtext(12, \"Customer Details\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"form\", 1)(14, \"div\", 2)(15, \"div\", 3)(16, \"mat-form-field\", 4)(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 5);\n        i0.ɵɵtemplate(20, ManageOrderComponent_mat_error_20_Template, 3, 2, \"mat-error\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-form-field\", 4)(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 7);\n        i0.ɵɵtemplate(25, ManageOrderComponent_mat_error_25_Template, 3, 2, \"mat-error\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-form-field\", 4)(27, \"mat-label\");\n        i0.ɵɵtext(28, \"Contact Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 8);\n        i0.ɵɵtemplate(30, ManageOrderComponent_mat_error_30_Template, 3, 2, \"mat-error\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-form-field\", 4)(32, \"mat-label\");\n        i0.ɵɵtext(33, \"Payment Method\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"mat-select\", 9)(35, \"mat-option\", 10);\n        i0.ɵɵtext(36, \"Cash\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"mat-option\", 11);\n        i0.ɵɵtext(38, \"Credit Card\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"mat-option\", 12);\n        i0.ɵɵtext(40, \"Debit Card\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(41, ManageOrderComponent_mat_error_41_Template, 3, 2, \"mat-error\", 6);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(42, \"hr\");\n        i0.ɵɵelementStart(43, \"mat-card\")(44, \"b\")(45, \"span\");\n        i0.ɵɵtext(46, \"Select Product\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(47, \"form\", 1)(48, \"div\", 2)(49, \"div\", 3)(50, \"mat-form-field\", 4)(51, \"mat-label\");\n        i0.ɵɵtext(52, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"mat-select\", 13);\n        i0.ɵɵlistener(\"selectionChange\", function ManageOrderComponent_Template_mat_select_selectionChange_53_listener($event) {\n          return ctx.getProductsByCategory($event.value);\n        });\n        i0.ɵɵtemplate(54, ManageOrderComponent_mat_option_54_Template, 2, 2, \"mat-option\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(55, \"mat-form-field\", 4)(56, \"mat-label\");\n        i0.ɵɵtext(57, \"Product\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"mat-select\", 15);\n        i0.ɵɵlistener(\"selectionChange\", function ManageOrderComponent_Template_mat_select_selectionChange_58_listener($event) {\n          return ctx.getProductsById($event.value);\n        });\n        i0.ɵɵtemplate(59, ManageOrderComponent_mat_option_59_Template, 2, 2, \"mat-option\", 14);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.validateSubmit());\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.manageOrderForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.manageOrderForm.controls.name.touched && ctx.manageOrderForm.controls.name.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.manageOrderForm.controls.email.touched && ctx.manageOrderForm.controls.email.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.manageOrderForm.controls.contactNumber.touched && ctx.manageOrderForm.controls.contactNumber.invalid);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.manageOrderForm.controls.paymentMethod.touched && ctx.manageOrderForm.controls.paymentMethod.invalid);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.manageOrderForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      }\n    },\n    directives: [i7.MatCard, i8.MatButton, i9.MatIcon, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i10.DefaultFlexDirective, i10.DefaultLayoutDirective, i11.MatFormField, i11.MatLabel, i12.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i13.NgIf, i11.MatError, i14.MatSelect, i15.MatOption, i13.NgForOf],\n    styles: [\"mat-form-field[_ngcontent-%COMP%]{padding:5px}.float-right[_ngcontent-%COMP%]{float:right}table[_ngcontent-%COMP%]{width:100%}mat-card[_ngcontent-%COMP%]{padding-bottom:30px!important}\"]\n  });\n  return ManageOrderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}