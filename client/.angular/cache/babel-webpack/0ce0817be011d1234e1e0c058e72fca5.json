{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from '../shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/user.service\";\nimport * as i4 from \"../services/snackbar.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"ngx-ui-loader/public-api\";\nimport * as i7 from \"@angular/material/toolbar\";\nimport * as i8 from \"@angular/flex-layout/flex\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/form-field\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/common\";\nfunction SignupComponent_mat_error_15_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_15_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, SignupComponent_mat_error_15_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵtemplate(2, SignupComponent_mat_error_15_span_2_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.signUpForm.controls.name.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.signUpForm.controls.name.errorrs.pattern);\n  }\n}\nfunction SignupComponent_mat_error_20_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_20_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, SignupComponent_mat_error_20_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵtemplate(2, SignupComponent_mat_error_20_span_2_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.signUpForm.controls.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.signUpForm.controls.email.errorrs.pattern);\n  }\n}\nfunction SignupComponent_mat_error_25_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_25_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, SignupComponent_mat_error_25_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵtemplate(2, SignupComponent_mat_error_25_span_2_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.signUpForm.controls.contactNumber.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.signUpForm.controls.contactNumber.errorrs.pattern);\n  }\n}\nfunction SignupComponent_mat_error_33_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, SignupComponent_mat_error_33_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.signUpForm.controls.password.errors.required);\n  }\n}\nfunction SignupComponent_mat_error_41_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, SignupComponent_mat_error_41_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.signUpForm.controls.confirmPassword.errors.required);\n  }\n}\nfunction SignupComponent_mat_hint_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\")(1, \"span\");\n    i0.ɵɵtext(2, \"Password and Confirm Password does not match\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let SignupComponent = /*#__PURE__*/(() => {\n  class SignupComponent {\n    constructor(formBuilder, router, userService, snackbarService, dialogRef, ngxService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.userService = userService;\n      this.snackbarService = snackbarService;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.password = true;\n      this.confirmPassword = true;\n      this.signUpForm = FormGroup;\n    }\n    ngOnInit() {\n      this.signUpForm = this.formBuilder.group({\n        name: [null, [Validators.required, Validators.pattern(GlobalConstants.nameRegex)]],\n        email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]],\n        contactNumber: [null, Validators.required, Validators.pattern(GlobalConstants.contactNumberRegex)],\n        password: [null, [Validators.required]],\n        confirmPassword: [null, [Validators.required]]\n      });\n    }\n    validateSubmit() {\n      if (this.signUpForm.controls['password'].value = this.signUpForm.controls['confirmPassword'].value) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    handleSubmit() {\n      this.ngxService.start(); //Loading ui\n      var formData = this.signUpForm.value;\n      var data = {\n        name: formData.name,\n        email: formData.email,\n        contactNumber: formData.contactNumber,\n        password: formData.password,\n        confirmPassword: formData.confirmPassword\n      };\n      //call API with form data\n      this.userService.signup(data).subscribe(response => {\n        this.ngxService.stop();\n        this.dialogRef.close();\n        this.responseMessage = response === null || response === void 0 ? void 0 : response.message;\n        this.snackbarService.openSnackBar(this.responseMessage, '');\n        this.router.navigate(['/']);\n      }, error => {\n        var _a, _b;\n        this.ngxService.stop();\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n  }\n  SignupComponent.ɵfac = function SignupComponent_Factory(t) {\n    return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.SnackbarService), i0.ɵɵdirectiveInject(i5.MatDialogRef), i0.ɵɵdirectiveInject(i6.NgxUiLoaderService));\n  };\n  SignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignupComponent,\n    selectors: [[\"app-signup\"]],\n    decls: 43,\n    vars: 15,\n    consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"spacer\"], [\"mat-icon-button\", \"\", \"mat-dialog-close\", \"\", 1, \"mat-dialog-close\"], [1, \"mat-typography\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"appearance\", \"standard\", \"fxFlex\", \"\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"contactNumber\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"type\", \"password\", \"required\", \"\", 3, \"type\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"confirmPassword\", \"type\", \"password\", \"required\", \"\", 3, \"type\"]],\n    template: function SignupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\");\n        i0.ɵɵtext(3, \"Signup\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"span\", 2);\n        i0.ɵɵelementStart(5, \"button\", 3)(6, \"mat-icon\");\n        i0.ɵɵtext(7, \"Close\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(8, \"mat-dialog-content\", 4)(9, \"form\", 5)(10, \"div\", 6)(11, \"mat-form-field\", 7)(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵtemplate(15, SignupComponent_mat_error_15_Template, 3, 2, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-form-field\", 7)(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 10);\n        i0.ɵɵtemplate(20, SignupComponent_mat_error_20_Template, 3, 2, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-form-field\", 7)(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Contact Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 11);\n        i0.ɵɵtemplate(25, SignupComponent_mat_error_25_Template, 3, 2, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-form-field\", 7)(27, \"mat-label\");\n        i0.ɵɵtext(28, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 12);\n        i0.ɵɵelementStart(30, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function SignupComponent_Template_button_click_30_listener() {\n          return ctx.password = !ctx.password;\n        });\n        i0.ɵɵelementStart(31, \"mat-icon\");\n        i0.ɵɵtext(32);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(33, SignupComponent_mat_error_33_Template, 2, 1, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"mat-form-field\", 7)(35, \"mat-label\");\n        i0.ɵɵtext(36, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"input\", 14);\n        i0.ɵɵelementStart(38, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function SignupComponent_Template_button_click_38_listener() {\n          return ctx.password = !ctx.password;\n        });\n        i0.ɵɵelementStart(39, \"mat-icon\");\n        i0.ɵɵtext(40);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(41, SignupComponent_mat_error_41_Template, 2, 1, \"mat-error\", 9);\n        i0.ɵɵtemplate(42, SignupComponent_mat_hint_42_Template, 3, 0, \"mat-hint\", 9);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.signUpForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.signUpForm.controls.name.touched && ctx.signUpForm.controls.name.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.signUpForm.controls.email.touched && ctx.signUpForm.controls.email.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.signUpForm.controls.contactNumber.touched && ctx.signUpForm.controls.contactNumber.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"type\", ctx.password ? \"password\" : \"text\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-label\", ctx.password);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.password ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.signUpForm.controls.password.touched && ctx.signUpForm.controls.password.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"type\", ctx.confirmPassword ? \"password\" : \"text\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-label\", ctx.password);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.password ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.signUpForm.controls.confirmPassword.touched && ctx.signUpForm.controls.confirmPassword.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateSubmit() && !ctx.signUpForm.controls.confirmPassword.invalid);\n      }\n    },\n    directives: [i7.MatToolbar, i7.MatToolbarRow, i8.DefaultLayoutDirective, i9.MatButton, i5.MatDialogClose, i10.MatIcon, i5.MatDialogContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i8.DefaultFlexDirective, i11.MatFormField, i11.MatLabel, i12.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i13.NgIf, i11.MatError, i11.MatSuffix, i11.MatHint],\n    styles: [\".mat-toolbar[_ngcontent-%COMP%]{margin:-24px -24px 10px;width:auto}mat-form-field[_ngcontent-%COMP%]{padding:5px}mat-hint[_ngcontent-%COMP%]{color:red}\"]\n  });\n  return SignupComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}