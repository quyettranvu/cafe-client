{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"src/app/shared/menu-item\";\nimport * as i3 from \"@angular/material/list\";\nimport * as i4 from \"../../../shared/accordion/accordion.directive\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../../shared/accordion/accordionlink.directive\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"../../../shared/accordion/accordionanchor.directive\";\nimport * as i9 from \"@angular/material/icon\";\nconst _c0 = function (a1) {\n  return [\"/cafe/\", a1];\n};\nfunction AppSidebarComponent_mat_list_item_1_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 4)(1, \"mat-icon\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const menuItem_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, menuItem_r1.state));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(menuItem_r1.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(menuItem_r1.name);\n  }\n}\nfunction AppSidebarComponent_mat_list_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\", 2);\n    i0.ɵɵtemplate(1, AppSidebarComponent_mat_list_item_1_a_1_Template, 5, 5, \"a\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const menuItem_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"group\", menuItem_r1.state);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", menuItem_r1.type === \"link\" && (menuItem_r1.role === \"\" || menuItem_r1.role === \"userRole\"));\n  }\n}\nexport let AppSidebarComponent = /*#__PURE__*/(() => {\n  class AppSidebarComponent {\n    constructor(changeDetectorRef, media, menuItems) {\n      var _a;\n      this.menuItems = menuItems;\n      this.token = localStorage.getItem('token');\n      this.tokenPayload = jwt_decode(this.token);\n      this.userRole = (_a = this.tokenPayload) === null || _a === void 0 ? void 0 : _a.role;\n      this.mobileQuery = media.matchMedia('(min-width: 768px)');\n      this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n      this.mobileQuery.addListener(this._mobileQueryListener);\n    }\n    ngOnDestroy() {\n      this.mobileQuery.removeListener(this._mobileQueryListener);\n    }\n  }\n  AppSidebarComponent.ɵfac = function AppSidebarComponent_Factory(t) {\n    return new (t || AppSidebarComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.MediaMatcher), i0.ɵɵdirectiveInject(i2.MenuItems));\n  };\n  AppSidebarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppSidebarComponent,\n    selectors: [[\"app-sidebar\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[\"appAccordion\", \"\"], [\"appAccordionLink\", \"\", \"routerLinkActive\", \"selected\", 3, \"group\", 4, \"ngFor\", \"ngForOf\"], [\"appAccordionLink\", \"\", \"routerLinkActive\", \"selected\", 3, \"group\"], [\"class\", \"\", \"appAccordionToggle\", \"\", 3, \"routerLink\", 4, \"ngIf\"], [\"appAccordionToggle\", \"\", 1, \"\", 3, \"routerLink\"]],\n    template: function AppSidebarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-nav-list\", 0);\n        i0.ɵɵtemplate(1, AppSidebarComponent_mat_list_item_1_Template, 2, 2, \"mat-list-item\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.menuItems.getMenuItem());\n      }\n    },\n    directives: [i3.MatNavList, i4.AccordionDirective, i5.NgForOf, i3.MatListItem, i6.AccordionLinkDirective, i7.RouterLinkActive, i5.NgIf, i7.RouterLinkWithHref, i8.AccordionAnchorDirective, i9.MatIcon],\n    encapsulation: 2\n  });\n  return AppSidebarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}